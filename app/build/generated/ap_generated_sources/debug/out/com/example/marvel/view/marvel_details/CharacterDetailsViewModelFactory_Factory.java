// Generated by Dagger (https://dagger.dev).
package com.example.marvel.view.marvel_details;

import com.example.marvel.usecases.GetThumbnailsUseCase;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CharacterDetailsViewModelFactory_Factory implements Factory<CharacterDetailsViewModelFactory> {
  private final Provider<GetThumbnailsUseCase> getComicsThumbnailsUseCaseProvider;

  private final Provider<GetThumbnailsUseCase> getComicsThumbnailsUseCaseProvider2;

  public CharacterDetailsViewModelFactory_Factory(
      Provider<GetThumbnailsUseCase> getComicsThumbnailsUseCaseProvider,
      Provider<GetThumbnailsUseCase> getComicsThumbnailsUseCaseProvider2) {
    this.getComicsThumbnailsUseCaseProvider = getComicsThumbnailsUseCaseProvider;
    this.getComicsThumbnailsUseCaseProvider2 = getComicsThumbnailsUseCaseProvider2;
  }

  @Override
  public CharacterDetailsViewModelFactory get() {
    CharacterDetailsViewModelFactory instance = newInstance(getComicsThumbnailsUseCaseProvider.get());
    CharacterDetailsViewModelFactory_MembersInjector.injectGetComicsThumbnailsUseCase(instance, getComicsThumbnailsUseCaseProvider2.get());
    return instance;
  }

  public static CharacterDetailsViewModelFactory_Factory create(
      Provider<GetThumbnailsUseCase> getComicsThumbnailsUseCaseProvider,
      Provider<GetThumbnailsUseCase> getComicsThumbnailsUseCaseProvider2) {
    return new CharacterDetailsViewModelFactory_Factory(getComicsThumbnailsUseCaseProvider, getComicsThumbnailsUseCaseProvider2);
  }

  public static CharacterDetailsViewModelFactory newInstance(
      GetThumbnailsUseCase getComicsThumbnailsUseCase) {
    return new CharacterDetailsViewModelFactory(getComicsThumbnailsUseCase);
  }
}
