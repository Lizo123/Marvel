// Generated by Dagger (https://dagger.dev).
package com.example.marvel.repository;

import com.example.marvel.datasource.DataStoreFactory;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryImpl_Factory implements Factory<RepositoryImpl> {
  private final Provider<DataStoreFactory> dataStoreFactoryProvider;

  public RepositoryImpl_Factory(Provider<DataStoreFactory> dataStoreFactoryProvider) {
    this.dataStoreFactoryProvider = dataStoreFactoryProvider;
  }

  @Override
  public RepositoryImpl get() {
    RepositoryImpl instance = newInstance();
    RepositoryImpl_MembersInjector.injectDataStoreFactory(instance, dataStoreFactoryProvider.get());
    return instance;
  }

  public static RepositoryImpl_Factory create(Provider<DataStoreFactory> dataStoreFactoryProvider) {
    return new RepositoryImpl_Factory(dataStoreFactoryProvider);
  }

  public static RepositoryImpl newInstance() {
    return new RepositoryImpl();
  }
}
