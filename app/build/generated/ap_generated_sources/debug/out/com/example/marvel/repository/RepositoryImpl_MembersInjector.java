// Generated by Dagger (https://dagger.dev).
package com.example.marvel.repository;

import com.example.marvel.datasource.DataStoreFactory;
import dagger.MembersInjector;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryImpl_MembersInjector implements MembersInjector<RepositoryImpl> {
  private final Provider<DataStoreFactory> dataStoreFactoryProvider;

  public RepositoryImpl_MembersInjector(Provider<DataStoreFactory> dataStoreFactoryProvider) {
    this.dataStoreFactoryProvider = dataStoreFactoryProvider;
  }

  public static MembersInjector<RepositoryImpl> create(
      Provider<DataStoreFactory> dataStoreFactoryProvider) {
    return new RepositoryImpl_MembersInjector(dataStoreFactoryProvider);}

  @Override
  public void injectMembers(RepositoryImpl instance) {
    injectDataStoreFactory(instance, dataStoreFactoryProvider.get());
  }

  public static void injectDataStoreFactory(RepositoryImpl instance,
      DataStoreFactory dataStoreFactory) {
    instance.dataStoreFactory = dataStoreFactory;
  }
}
